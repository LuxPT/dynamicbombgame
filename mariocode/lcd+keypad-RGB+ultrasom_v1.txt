#include <Keypad.h>
#include <LiquidCrystal.h>
#include <Tone.h>

#define trigPin 13
#define echoPin 12

#define R 7
#define B 6
#define G 5


// piezo=A3;
LiquidCrystal lcd(7,8,10,11,12,13);


char* password ; 
int sequencia;
int position = 0;
int engano=0;

long duration, distance;
int x;

const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
{'1','2','3','A'},
{'4','5','6','B'},
{'7','8','9','C'},
{'*','0','#','D'}
};


byte rowPins[ROWS] = { 3,4,5,6 };
byte colPins[COLS] = { 8,9,10,11 };
Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

int Redled = 13;
int Greenled = 12;
int led1=A0;
int led2=A1;
int led3=A2;



long measureDistance()
{
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
//Wait for echo and measure time until it happens
duration =pulseIn(echoPin, HIGH);
//Compute distance
distance = duration/58;
return distance;
}





void setup()
{
  Serial.begin(9600);

  lcd.begin(16, 2);
  lcd.clear();
  lcd.setCursor(0,0);			//mete o cursor no 0,0 depois temos de definir ao certo a posição 
                                        //correta tambem de acordo com o tempo da bomba

//definir os pins//definir os pins//definir os pins//definir os pins

  pinMode(Redled, OUTPUT);
  pinMode(Greenled, OUTPUT);

  pinMode(led1, OUTPUT);
  pinMode(led2 ,OUTPUT);
  pinMode(led3,OUTPUT);
  pinMode(A3, OUTPUT);//piezzo

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  pinMode(R, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(B, OUTPUT);




noTone(A3);                        //piezo calado
digitalWrite(Redled, LOW);         //todos os leds apagados
digitalWrite(Greenled,LOW);
digitalWrite(led1,0);
digitalWrite(led2,0);
digitalWrite(led3,0);

sequencia=random(6);                    //uma escolha aleatoria das 6 password

lcd.print("Enter the password: ");      //imprime no lcd para escrever o codigo


switch(sequencia)
{
  case 0:			          //os leds apagados correspondem à pass F5678
  password = "F5678";
  digitalWrite(led1,0);
  digitalWrite(led2,0);
  digitalWrite(led3,0);
  break;
  

  case 1:				  //os leds1 e 2 apagados e o 3 aceso corresponde à pass 50D23
  password = "50D23"; 
  digitalWrite(led1,0);
  digitalWrite(led2,0);
  digitalWrite(led3,1);
   break;


case 2:				         //os leds leds2 e 3 acesos e o 3 apagado correspondem à pass 93524
  password = "93524";
  digitalWrite(led1,0);
  digitalWrite(led2,1);
  digitalWrite(led3,1);
  break;

case 3:				        //os leds acessos correspondem à pass 314A0
 password = "314A0";
 digitalWrite(led1,1);
 digitalWrite(led2,1);
 digitalWrite(led3,1);
 break;

case 4:				//os leds1 e 3 apagados  e 2 aceso corresponde à pass 0B2CD
 password = "0B2CD";
 digitalWrite(led1,0);
 digitalWrite(led2,1);
 digitalWrite(led3,0);
 break;


case 5:				//os leds2 e 3 apagados e o 1 aceso correspondem à pass 2B699
  password = "2B699";
  digitalWrite(led1,1);
  digitalWrite(led2,0);
  digitalWrite(led3,0);
  break;

}


 char key = keypad.getKey();       //mete a tecla na variavel key

if (key == '*' || key == '#' || key!=password[position])

//se a tecla for um *,um # ou diferente da pretendida, volta-se ao inicio da escrita da pass
{
position = 0;
tone(A3, 280, 500);			//o piezo apita um som grave de erro (depois temos de confirmar essa freq de 280 para ver se o som é o ideal
lcd.clear();
lcd.setCursor(0,0);
lcd.print("Wrong Password!");		//o lcd apaga o que tinha lá e escreve wrong password
 
digitalWrite(Redled, HIGH);		//o led verde está apagado mas o vermelho acende 600 ms e desliga para mostrar que se errou
digitalWrite(Greenled, LOW);
delay(600);
digitalWrite(Redled, LOW);

digitalWrite(led1,1);			 //os leds da sequencia acendem todos e depois apagam
digitalWrite(led2,1);
digitalWrite(led3,1);
delay(500);

digitalWrite(led1,0);
digitalWrite(led2,0);
digitalWrite(led3,0);
lcd.clear();
 
 engano++;

 if(engano==4)			      //se errarmos 4 vezes o lcd é apagado e imprime que se errou 4 vezes,durante 2000 ms e portanto 30 segundos foram retirados
 {				      //falta depois juntar isso com o verdadeiro timer e retirar 30
   lcd.clear();
   lcd.setCursor(0,0);
   lcd.print("you failed 4 times the password!");
  delay(2000);
   lcd.clear();
   lcd.print(" Oops ! 30 seconds were taken from the timer");

  tone(A3, 280, 500);		//o piezo apita o som de erro 2 vezes
  delay(300);
  tone(A3, 280, 500);
  engano=0;			//volta a 0 as vezes em que nos enganamos
lcd.clear();
 }

}

if (key == password[position])		//se a tecla estiver correta,pode avançar para a proxima letra/nº na password
{					
position ++;
lcd.clear();
 lcd.setCursor(0,0);			//depois temos de definir a posição correta para escrever
    lcd.print(password[position]);	//é impressa a letra/nº  no lcd

  tone(A3, 980, 500);			//o piezo apita um som de vitoria (temos de ver se a freq de 980 hz é a indicada para este som)

  digitalWrite(Redled, LOW);		//o led vermelho apaga e pisca o verde
  digitalWrite(Greenled, HIGH);
 delay(600);
  digitalWrite(Greenled, LOW);
}

if (position == 5)			//se chegarmos à posição final com tudo certo
{
digitalWrite(Greenled, HIGH);		//o led verde acende (o vermelho já estava apagado i guess)
					// os leds piscam numa sequencia toda bonita tipo cascata (talvez dê para simplificar esse codigo seguinte mas tenho preguiça) e depois apagam
digitalWrite(led1,0);
digitalWrite(led2,0);
digitalWrite(led3,0);
delay(300);

digitalWrite(led1,1);
digitalWrite(led2,0);
digitalWrite(led3,0);
delay(300);

digitalWrite(led1,0);
digitalWrite(led2,1);
digitalWrite(led3,0);
delay(300);

digitalWrite(led1,0);
digitalWrite(led2,0);
digitalWrite(led3,1);
delay(300);

digitalWrite(led1,0);
digitalWrite(led2,1);
digitalWrite(led3,0);
delay(300);

digitalWrite(led1,1);
digitalWrite(led2,0);
digitalWrite(led3,0);
delay(300);

digitalWrite(led1,0);
digitalWrite(led2,0);
digitalWrite(led3,0);

delay(300);		//o piezo apita a seguir 2 vezes
tone(A3, 980, 500);
delay(400);
tone(A3, 980, 500);


lcd.clear();
lcd.print("The bomb has been defused"); // a bomba foi defusada (ter em atenção ao cursor)

}
delay(100);
}








void loop()
{
distance= measureDistance();
lcd.clear();
lcd.print("PERIGO DE RADIOATIVIDADE");
 
  
  if(distance>600)
  { 
	x=0;
      tone(4, 880, 200);
      delay(1000);
     
      analogWrite(G,0);
      analogWrite(R,0);
      while(x<256)
      {
        analogWrite(B,x);x++;
      }
    }
    
  
    if(distance<600 && distance>350)
    {
      lcd.clear();
       lcd.print("Ultimo aviso");
       tone(4, 880, 200);
      delay(500);

      x=0;
      analogWrite(R,0);
      analogWrite(B,0);
     while(x<256)
      {
        analogWrite(G,x);x++;
      }
    }
      
    if(distance<350)	
    {
    lcd.clear();
    lcd.print("Bye bye");
	x=0;
      tone(4, 880, 200);
      delay(250);
     
      analogWrite(G,0);
      analogWrite(B,0);
       while(x<256)
      {
        analogWrite(R,x);x=x++;
      }
 
}